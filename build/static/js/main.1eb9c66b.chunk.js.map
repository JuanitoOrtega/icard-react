{"version":3,"sources":["utils/constants.jsx","api/token.jsx","context/AuthContext.jsx","hooks/useAuth.jsx","api/user.jsx","hooks/useUser.jsx","api/category.jsx","hooks/useCategory.jsx","api/product.jsx","hooks/useProduct.jsx","api/table.jsx","hooks/useTable.jsx","api/order.jsx","hooks/useOrder.jsx","api/payment.jsx","hooks/usePayment.jsx","layouts/ClientLayout/ClientLayout.jsx","components/Admin/LoginForm/LoginForm.jsx","components/Admin/TopMenu/TopMenu.jsx","components/Admin/SideMenu/SideMenu.jsx","components/Admin/HeaderPage/HeaderPage.jsx","components/Admin/User/TableUserAdmin/TableUserAdmin.jsx","components/Admin/User/AddEditUserForm/AddEditUserForm.jsx","components/Admin/Category/TableCategoryAdmin/TableCategoryAdmin.jsx","components/Admin/Category/AddEditCategoryForm/AddEditCategoryForm.jsx","components/Admin/Product/TableProductAdmin/TableProductAdmin.jsx","components/Admin/Product/AddEditProductForm/AddEditProductForm.jsx","components/Common/ModalBasic/ModalBasic.jsx","components/Common/ModalConfirm/ModalConfirm.jsx","components/Admin/Table/TableTablesAdmin/TableTablesAdmin.jsx","components/Admin/Table/AddEditTableForm/AddEditTableForm.jsx","assets/table.svg","components/Admin/Table/TableAdmin/TableAdmin.jsx","components/Admin/Table/TablesListAdmin/TablesListAdmin.jsx","components/Admin/TableDetails/OrderItemAdmin/OrderItemAdmin.jsx","components/Admin/TableDetails/ListOrderAdmin/ListOrderAdmin.jsx","components/Admin/TableDetails/PaymentDetail/PaymentDetail.jsx","components/Admin/Orders/AddOrderForm/AddOrderForm.jsx","components/Admin/Payment/TablePayments/TablePayments.jsx","components/Admin/Payment/PaymentProductList/PaymentProductList.jsx","pages/Admin/LoginAdmin/LoginAdmin.jsx","layouts/AdminLayout/AdminLayout.jsx","layouts/BasicLayout.jsx","routes/routes.admin.jsx","pages/Admin/OrdersAdmin.jsx","pages/Admin/UsersAdmin.jsx","pages/Admin/CategoriesAdmin.jsx","pages/Admin/ProductsAdmin.jsx","pages/Admin/TablesAdmin.jsx","pages/Admin/TableDetailsAdmin.jsx","pages/Admin/PaymentsHistory.jsx","components/Client/ListCategories/ListCategories.jsx","api/cart.jsx","components/Client/ListProducts/ListProducts.jsx","components/Client/ListProductsCart/ListProductsCart.jsx","components/Client/OrderHistoryItem/OrderHistoryItem.jsx","routes/routes.client.jsx","pages/Client/SelectTable/SelectTable.jsx","pages/Client/Categories.jsx","pages/Client/Cart.jsx","pages/Client/OrdersHistory.jsx","pages/Client/Products.jsx","routes/routes.jsx","pages/Error404.jsx","routes/Navigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_API","TOKEN","ORDER_STATUS","PAYMENT_STATUS","setToken","token","localStorage","setItem","AuthContext","createContext","auth","undefined","login","logout","AuthProvider","props","children","useState","setAuth","getMe","useUser","useEffect","a","getItem","me","valueContext","removeItem","Provider","value","useAuth","useContext","loginApi","formValue","url","params","method","headers","body","JSON","stringify","fetch","response","status","Error","json","result","getMeApi","Authorization","getUsersApi","addUserApi","data","updateUserApi","id","deleteUserApi","loading","setLoading","error","setError","users","setUsers","getUsers","addUser","updateUser","deleteUser","getCategoriesApi","addCategoryApi","formData","FormData","append","image","title","updateCategoryApi","deleteCategoryApi","useCategory","categories","setCategories","getCategories","addCategory","updateCategory","deleteCategory","getProductsApi","addProductApi","category","price","active","updateProductApi","deleteProductApi","getProductByIdApi","getProductsByCategoryApi","idCategory","categoryFilter","useProduct","products","setProducts","getProducts","addProduct","updateProduct","deleteProduct","getProductById","product","getProductsByCategory","getTablesApi","addTableApi","number","updateTableApi","deleteTableApi","getTableApi","getTableByNumberApi","tableNumber","tableFilter","useTable","tables","setTables","table","setTable","getTables","addTable","updateTable","deleteTable","getTable","isExistTable","size","getTableByNumber","getOrdersByTableApi","ordering","statusFilter","closeFilter","checkDeliveredOrderApi","addOrderToTableApi","idTable","idProduct","addPaymentToOrderApi","idOrder","idPayment","payment","closeOrderApi","close","getOrdersByPaymentApi","paymentFilter","useOrder","orders","setOrders","getOrdersByTable","checkDeliveredOrder","addOrderToTable","addPaymentToOrder","closeOrder","getOrdersByPayment","createPaymentApi","paymentData","getPaymentByTableApi","closePaymentApi","status_payment","getPaymentsApi","usePayment","payments","setPayments","createPayment","getPaymentByTable","closePayment","getPayments","ClientLayout","useParams","history","useHistory","closeTable","push","className","Container","to","Button","icon","onClick","Icon","name","LoginForm","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","onSubmit","access","toast","message","Form","handleSubmit","Input","type","placeholder","values","onChange","handleChange","errors","content","primary","fluid","TopMenu","Menu","fixed","Item","position","first_name","renderName","SideMenu","pathname","useLocation","MenuLeft","borderless","vertical","as","Link","is_staff","HeaderPage","btnTitle","btnClick","btnTitleTwo","btnClickTwo","positive","negative","TableUserAdmin","onDeleteUser","Table","Header","Row","HeaderCell","Body","map","user","index","Cell","username","last_name","is_active","color","Actions","textAlign","AddEditUserForm","onClose","onRefetch","validateOnChange","console","log","iconPosition","Checkbox","toggle","label","checked","_","setFieldValue","TableCategoryAdmin","width","Image","src","rounded","AddEditCategoryForm","previewImage","setPreviewImage","onDrop","useCallback","acceptedFiles","file","URL","createObjectURL","useDropzone","accept","noKeyboard","multiple","getRootProps","getInputProps","centered","TableProductAdmin","category_data","AddEditProductForm","categoriesFormat","setCategoriesFormat","item","key","text","Dropdown","selection","search","options","ModalBasic","show","Modal","closeIcon","open","Content","defaultProps","ModalConfirm","onCloseText","onConfirm","onConfirmText","TableTablesAdmin","showModal","setShowModal","contentModal","setContentModal","openCloseModal","showQr","tableQr","window","location","origin","AddEditTableForm","_excluded","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTable","_ref","svgRef","titleId","viewBox","xmlns","ref","style","stroke","x","y","height","rx","ry","transform","d","ForwardRef","TableAdmin","reload","tableBusy","setTableBusy","pendingPayment","setPendingPayment","Label","circular","classNames","pending","busy","TablesListAdmin","setReload","autoReload","setAutoReload","onReload","prev","autoReloadAction","setTimeout","OrderItemAdmin","order","onReloadOrders","product_data","onCheckDeliveredOrder","toLowerCase","moment","created_at","format","startOf","fromNow","note","ListOrderAdmin","PaymentDetail","onCloseTable","confirm","striped","table_data","amount","payment_type","AddOrderForm","productsFormat","setProductsFormat","productsData","setProductsData","addProductList","productsId","arrayTemp","avatar","basic","idProducts","splice","removeProductList","TablePayments","titleModal","setTitleModal","date","showDetails","PaymentProductList","LoginAdmin","AdminLayout","BasicLayout","routesAdmin","path","layout","component","Loader","inline","exact","refetch","setRefetch","onDeleteCategory","onDeleteProduct","onDeleteTable","reloadOrders","setReloadOrders","setPaymentData","onCreatePayment","totalPayment","forEach","Number","resultTypePayment","toFixed","ListCategories","alt","PRODUCT_CART","getProductsCart","parse","ListProducts","addCart","addProductCart","success","ListProductsCart","onReloadCart","total","setTotal","totalTemp","removeProduct","removeProductCartApi","createOrder","tableData","substring","OrderHistoryItem","routesClient","tableNum","setTableNum","reloadCart","setReloadCart","idProductsCart","productsArray","setIdTable","showTypePayment","setShowTypePayment","isRequestAccount","setIsRequestAccount","idTableTemp","routes","Navigation","route","render","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1eb9c66b.chunk.js","sourcesContent":["export const BASE_API = 'https://icard.juanitodev.com';\nexport const TOKEN = 'token';\n\nexport const ORDER_STATUS = {\n    PENDING: 'PENDING',\n    DELIVERED: 'DELIVERED'\n}\n\nexport const PAYMENT_STATUS = {\n    PENDING: 'PENDING',\n    PAID: 'PAID'\n}","import { TOKEN } from '../utils/constants';\n\nexport function setToken(token) {\n    localStorage.setItem(TOKEN, token);\n}\n\nexport function getToken() {\n    return localStorage.getItem(TOKEN);\n}\n\nexport function removeToken() {\n    localStorage.removeItem(TOKEN);\n}","import React, { useState, useEffect, createContext } from 'react';\nimport { setToken, getToken, removeToken } from '../api/token';\nimport { useUser } from '../hooks';\n\nexport const AuthContext = createContext({\n    auth: undefined,\n    login: () => null,\n    logout: () => null\n});\n\nexport function AuthProvider(props) {\n    const { children } = props;\n    const [auth, setAuth] = useState(undefined);\n    const { getMe } = useUser();\n\n    useEffect(() => {\n        (async () => {\n            const token = getToken();\n            if (token) {\n                const me = await getMe(token);\n                setAuth({ token, me });\n            } else {\n                setAuth(null);\n            }\n        })();\n    }, []);\n\n    const login = async (token) => {\n        setToken(token);\n        const me = await getMe(token);\n        setAuth({ token, me });\n    }\n\n    const logout = () => {\n        if (auth) {\n            removeToken();\n            setAuth(null);\n        }\n    }\n\n    const valueContext = {\n        auth,\n        login,\n        logout\n    }\n\n    if (auth === undefined) return null;\n\n    return (\n        <AuthContext.Provider value={valueContext}>\n            {children}\n        </AuthContext.Provider>\n    )\n}","import { useContext } from \"react\";\nimport { AuthContext } from '../context';\n\nexport const useAuth = () => useContext(AuthContext);","import { BASE_API } from \"../utils/constants\";\n\n// Función para iniciar sesión\nexport async function loginApi(formValue) {\n    try {\n        const url = `${BASE_API}/api/auth/login/`;\n        const params = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(formValue)\n        }\n        const response = await fetch(url, params);\n        if (response.status !== 200) {\n            throw new Error(\"Usuario o contraseña incorrectos\");\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Función para obtener el usuario actual\nexport async function getMeApi(token) {\n    try {\n        const url = `${BASE_API}/api/auth/me/`;\n        const params = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Función para obtener los usuarios\nexport async function getUsersApi(token) {\n    try {\n        const url = `${BASE_API}/api/users/`;\n        const params = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Función para crear nuevos usuarios\nexport async function addUserApi(data, token) {\n    try {\n        const url = `${BASE_API}/api/users/`;\n        const params = {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Función para actualizar usuarios\nexport async function updateUserApi(id, data, token) {\n    try {\n        const url = `${BASE_API}/api/users/${id}/`;\n        const params = {\n            method: \"PATCH\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        }\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Función para eliminar usuarios\nexport async function deleteUserApi(id, token) {\n    try {\n        const url = `${BASE_API}/api/users/${id}/`;\n        const params = {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { useState } from 'react';\nimport { getMeApi, getUsersApi, addUserApi, updateUserApi, deleteUserApi } from '../api/user';\nimport { useAuth } from '.';\n\nexport function useUser() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [users, setUsers] = useState(null);\n    const { auth } = useAuth();\n\n    // Función para obtener el usuario actual\n    const getMe = async (token) => {\n        try {\n            const response = await getMeApi(token);\n            return response;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    // Función para obtener los usuarios\n    const getUsers = async (token) => {\n        try {\n            setLoading(true);\n            const response = await getUsersApi(auth.token);\n            setLoading(false);\n            setUsers(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Función para crear nuevos usuarios\n    const addUser = async (data) => {\n        try {\n            setLoading(true);\n            await addUserApi(data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Función para actualizar usuarios\n    const updateUser = async (id, data) => {\n        try {\n            setLoading(true);\n            await updateUserApi(id, data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Función para eliminar usuarios\n    const deleteUser = async (id) => {\n        try {\n            setLoading(true);\n            await deleteUserApi(id, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    return {\n        loading,\n        error,\n        users,\n        getMe,\n        getUsers,\n        addUser,\n        updateUser,\n        deleteUser\n    }\n}\n","import { BASE_API } from '../utils/constants';\n\n// Get all categories\nexport async function getCategoriesApi() {\n    try {\n        const url = `${BASE_API}/api/categories/`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Add a new category\nexport async function addCategoryApi(data, token) {\n    try {\n        const formData = new FormData();\n        formData.append('image', data.image);\n        formData.append('title', data.title);\n\n        const url = `${BASE_API}/api/categories/`;\n        const params = {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: formData\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Update category\nexport async function updateCategoryApi(id, data, token) {\n    try {\n        const formData = new FormData();\n        formData.append('title', data.title);\n        if (data.image) {\n            formData.append('image', data.image);\n        }\n\n        const url = `${BASE_API}/api/categories/${id}/`;\n        const params = {\n            method: 'PATCH',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: formData\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Delete category\nexport async function deleteCategoryApi(id, token) {\n    try {\n        const url = `${BASE_API}/api/categories/${id}/`;\n        const params = {\n            method: 'DELETE',\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { useState } from \"react\";\nimport { getCategoriesApi, addCategoryApi, updateCategoryApi, deleteCategoryApi } from \"../api/category\";\nimport { useAuth } from \"./useAuth\";\n\nexport function useCategory() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [categories, setCategories] = useState(null);\n    const { auth } = useAuth();\n\n    // Get all categories\n    const getCategories = async () => {\n        try {\n            setLoading(true);\n            const response = await getCategoriesApi();\n            setLoading(false);\n            setCategories(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Add a new category\n    const addCategory = async (data) => {\n        try {\n            setLoading(true);\n            await addCategoryApi(data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Update a category\n    const updateCategory = async (id, data) => {\n        try {\n            setLoading(true);\n            await updateCategoryApi(id, data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Delete a category\n    const deleteCategory = async (id) => {\n        try {\n            setLoading(true);\n            await deleteCategoryApi(id, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    return {\n        loading,\n        error,\n        categories,\n        getCategories,\n        addCategory,\n        updateCategory,\n        deleteCategory\n    }\n}","import { BASE_API } from '../utils/constants';\n\n// Get all products\nexport async function getProductsApi() {\n    try {\n        const url = `${BASE_API}/api/products/`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Add a new product\nexport async function addProductApi(data, token) {\n    try {\n        const formData = new FormData();\n        formData.append('title', data.title);\n        formData.append('category', data.category);\n        formData.append('price', data.price);\n        formData.append('image', data.image);\n        formData.append('active', data.active);\n\n        const url = `${BASE_API}/api/products/`;\n        const params = {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: formData\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Update a product\nexport async function updateProductApi(id, data, token) {\n    try {\n        const formData = new FormData();\n        formData.append('title', data.title);\n        formData.append('category', data.category);\n        formData.append('price', data.price);\n\n        if (data.image) {\n            formData.append('image', data.image);\n        }\n\n        formData.append('active', data.active);\n\n        const url = `${BASE_API}/api/products/${id}/`;\n        const params = {\n            method: 'PATCH',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: formData\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Delete product\nexport async function deleteProductApi(id, token) {\n    try {\n        const url = `${BASE_API}/api/products/${id}/`;\n        const params = {\n            method: 'DELETE',\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n\n// Get product by id\nexport async function getProductByIdApi(id) {\n    try {\n        const url = `${BASE_API}/api/products/${id}/`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Get products by category\nexport async function getProductsByCategoryApi(idCategory) {\n    try {\n        const categoryFilter = `category=${idCategory}`;\n        const url = `${BASE_API}/api/products/?${categoryFilter}`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { useState } from 'react';\nimport { getProductsApi, addProductApi, updateProductApi, deleteProductApi, getProductByIdApi, getProductsByCategoryApi } from '../api/product';\nimport { useAuth } from \"./useAuth\";\n\nexport function useProduct() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [products, setProducts] = useState(null);\n    const { auth } = useAuth();\n\n    // Get all products\n    const getProducts = async () => {\n        try {\n            setLoading(true);\n            const response = await getProductsApi();\n            setLoading(false);\n            setProducts(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    };\n\n    // Add a new product\n    const addProduct = async (data) => {\n        try {\n            setLoading(true);\n            await addProductApi(data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Update a product\n    const updateProduct = async (id, data) => {\n        try {\n            setLoading(true);\n            await updateProductApi(id, data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Delete a product\n    const deleteProduct = async (id) => {\n        try {\n            setLoading(true);\n            await deleteProductApi(id, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Get a product by id\n    const getProductById = async (id) => {\n        try {\n            setLoading(true);\n            const product = await getProductByIdApi(id);\n            setLoading(false);\n            return product;\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Get products by category\n    const getProductsByCategory = async (idCategory) => {\n        try {\n            setLoading(true);\n            const response = await getProductsByCategoryApi(idCategory);\n            setLoading(false);\n            setProducts(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    return {\n        loading,\n        error,\n        products,\n        getProducts,\n        addProduct,\n        updateProduct,\n        deleteProduct,\n        getProductById,\n        getProductsByCategory\n    };\n}","import { BASE_API } from '../utils/constants';\n\n// Get all tables\nexport async function getTablesApi() {\n    try {\n        const url = `${BASE_API}/api/tables/`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Add a new table\nexport async function addTableApi(data, token) {\n    try {\n        const formData = new FormData();\n        formData.append('number', data.number);\n\n        const url = `${BASE_API}/api/tables/`;\n        const params = {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: formData\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Update table\nexport async function updateTableApi(id, data, token) {\n    try {\n        const formData = new FormData();\n        formData.append('number', data.number);\n\n        const url = `${BASE_API}/api/tables/${id}/`;\n        const params = {\n            method: 'PATCH',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: formData\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Delete table\nexport async function deleteTableApi(id, token) {\n    try {\n        const url = `${BASE_API}/api/tables/${id}/`;\n        const params = {\n            method: 'DELETE',\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Get table number\nexport async function getTableApi(id) {\n    try {\n        const url = `${BASE_API}/api/tables/${id}/`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Get table by number\nexport async function getTableByNumberApi(tableNumber) {\n    try {\n        const tableFilter = `number=${tableNumber}`;\n\n        const url = `${BASE_API}/api/tables/?${tableFilter}`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { useState } from 'react';\nimport { size } from 'lodash';\nimport { getTablesApi, addTableApi, updateTableApi, deleteTableApi, getTableApi, getTableByNumberApi } from '../api/table';\nimport { useAuth } from \"./useAuth\";\n\nexport function useTable() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [tables, setTables] = useState(null);\n    const [table, setTable] = useState(null);\n    const { auth } = useAuth();\n\n    // Get all tables\n    const getTables = async () => {\n        try {\n            setLoading(true);\n            const response = await getTablesApi(auth.token);\n            setLoading(false);\n            setTables(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    };\n\n    // Add a new table\n    const addTable = async (data) => {\n        try {\n            setLoading(true);\n            await addTableApi(data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Update a table\n    const updateTable = async (id, data) => {\n        try {\n            setLoading(true);\n            await updateTableApi(id, data, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Delete a table\n    const deleteTable = async (id) => {\n        try {\n            setLoading(true);\n            await deleteTableApi(id, auth.token);\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    // Get a table number\n    const getTable = async (id) => {\n        try {\n            setLoading(true);\n            const response = await getTableApi(id);\n            setLoading(false);\n            setTable(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    const isExistTable = async (tableNumber) => {\n        try {\n            const response = await getTableByNumberApi(tableNumber);\n            if (size(response) === 0) throw Error();\n            return true;\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const getTableByNumber = async (tableNumber) => {\n        try {\n            const response = await getTableByNumberApi(tableNumber);\n            return response;\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    return {\n        loading,\n        error,\n        tables,\n        table,\n        getTables,\n        addTable,\n        updateTable,\n        deleteTable,\n        getTable,\n        isExistTable,\n        getTableByNumber\n    };\n}\n","import { BASE_API, ORDER_STATUS } from '../utils/constants';\n\n// Para traer toda la información de una orden\nexport async function getOrdersByTableApi(id, status = '', ordering = '') {\n    try {\n        const tableFilter = `table=${id}`;\n        const statusFilter = `status=${status}`;\n        const closeFilter = 'close=False';\n\n        const url = `${BASE_API}/api/orders/?${tableFilter}&${statusFilter}&${closeFilter}&${ordering}`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Para marcar un pedido como entregado\nexport async function checkDeliveredOrderApi(id) {\n    try {\n        const url = `${BASE_API}/api/orders/${id}/`;\n        const params = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: ORDER_STATUS.DELIVERED\n            })\n        };\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Para añadir un pedido\nexport async function addOrderToTableApi(idTable, idProduct) {\n    try {\n        const url = `${BASE_API}/api/orders/`;\n        const params = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: ORDER_STATUS.PENDING,\n                table: idTable,\n                product: idProduct\n            })\n        };\n        await fetch(url, params);\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function addPaymentToOrderApi(idOrder, idPayment) {\n    try {\n        const url = `${BASE_API}/api/orders/${idOrder}/`;\n        const params = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                payment: idPayment\n            })\n        };\n        await fetch(url, params);\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function closeOrderApi(idOrder) {\n    try {\n        const url = `${BASE_API}/api/orders/${idOrder}/`;\n        const params = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                close: true\n            })\n        };\n        await fetch(url, params);\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getOrdersByPaymentApi(idPayment) {\n    try {\n        const paymentFilter = `payment=${idPayment}`;\n    \n        const url = `${BASE_API}/api/orders/?${paymentFilter}`;\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { useState } from 'react';\nimport { getOrdersByTableApi, checkDeliveredOrderApi, addOrderToTableApi, addPaymentToOrderApi, closeOrderApi, getOrdersByPaymentApi } from '../api/order';\n\nexport function useOrder() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [orders, setOrders] = useState(null);\n\n    const getOrdersByTable = async (idTable, status, ordering) => {\n        try {\n            setLoading(true);\n            const response = await getOrdersByTableApi(idTable, status, ordering);\n            setLoading(false);\n            setOrders(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    const checkDeliveredOrder = async (idOrder) => {\n        try {\n            await checkDeliveredOrderApi(idOrder);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const addOrderToTable = async (idTable, idProduct) => {\n        try {\n            await addOrderToTableApi(idTable, idProduct);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const addPaymentToOrder = async (idOrder, idPayment) => {\n        try {\n            await addPaymentToOrderApi(idOrder, idPayment);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const closeOrder = async (idOrder) => {\n        try {\n            await closeOrderApi(idOrder);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const getOrdersByPayment = async (idPayment) => {\n        try {\n            return await getOrdersByPaymentApi(idPayment);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    return {\n        loading,\n        error,\n        orders,\n        getOrdersByTable,\n        checkDeliveredOrder,\n        addOrderToTable,\n        addPaymentToOrder,\n        closeOrder,\n        getOrdersByPayment\n    }\n}","import { BASE_API, PAYMENT_STATUS } from \"../utils/constants\";\n\nexport async function createPaymentApi(paymentData) {\n    try {\n        const url = `${BASE_API}/api/payments/`;\n        const params = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(paymentData)\n        };\n\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getPaymentByTableApi(idTable) {\n    try {\n        const tableFilter = `table=${idTable}`;\n        const statusFilter = `status_payment=${PAYMENT_STATUS.PENDING}`;\n        \n        const url = `${BASE_API}/api/payments/?${tableFilter}&${statusFilter}`;\n        const params = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const response = await fetch(url, params);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function closePaymentApi(idPayment) {\n    try {\n        const url = `${BASE_API}/api/payments/${idPayment}/`;\n        const params = {\n            method: \"PATCH\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                status_payment: PAYMENT_STATUS.PAID,\n            }),\n        };\n        await fetch(url, params);\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Para ver el historial de pagos\nexport async function getPaymentsApi() {\n    try {\n        const paymentFilter = `status_payment=${PAYMENT_STATUS.PAID}`;\n        const orderingFilter = 'ordering=date';\n        \n        const url = `${BASE_API}/api/payments/?${paymentFilter}&${orderingFilter}`;\n        // Aquí no hace falta los headers porque no se necesitan\n        const response = await fetch(url);\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { useState } from \"react\";\nimport { createPaymentApi, getPaymentByTableApi, closePaymentApi, getPaymentsApi } from \"../api/payment\";\n\nexport function usePayment() {\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [payments, setPayments] = useState(null);\n\n    const createPayment = async (paymentData) => {\n        try {\n            const result = await createPaymentApi(paymentData);\n            return result;\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const getPaymentByTable = async (idTable) => {\n        try {\n            const result = await getPaymentByTableApi(idTable);\n            return result;\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    const closePayment = async (idPayment) => {\n        try {\n            await closePaymentApi(idPayment);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    const getPayments = async () => {\n        try {\n            setLoading(true);\n            const response = await getPaymentsApi();\n            setLoading(false);\n            setPayments(response);\n        } catch (error) {\n            setLoading(false);\n            setError(error);\n        }\n    }\n\n    return {\n        error,\n        loading,\n        payments,\n        createPayment,\n        getPaymentByTable,\n        closePayment,\n        getPayments\n    }\n}","import React, { useEffect } from 'react';\nimport { Container, Button, Icon } from 'semantic-ui-react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useTable } from '../../hooks';\nimport './ClientLayout.scss';\n\nexport function ClientLayout(props) {\n    // El children es el contenido que tiene nuestro layout\n    const { children } = props;\n    const { isExistTable } = useTable();\n    const { tableNumber } = useParams();\n    const history = useHistory();\n    // console.log(useParams());\n\n    useEffect(() => {\n        (async () => {\n            const exist = await isExistTable(tableNumber);\n            if (!exist) closeTable();\n        })();\n    }, [tableNumber]);\n\n    const closeTable = () => {\n        history.push('/');\n    }\n\n    const goToCart = () => {\n        history.push(`/client/${tableNumber}/cart`);\n    }\n\n    const goToOrders = () => {\n        history.push(`/client/${tableNumber}/orders`);\n    }\n\n    return (\n        <div className='client-layout-bg'>\n            <Container className='client-layout'>\n                <div className='client-layout__header'>\n                    <Link to={`/client/${tableNumber}`}>\n                        <h1>iCard</h1>\n                    </Link>\n                    <span>Mesa {tableNumber}</span>\n                    <div>\n                        <Button icon onClick={goToCart}>\n                            <Icon name='shop' />\n                        </Button>\n                        <Button icon onClick={goToOrders}>\n                            <Icon name='list' />\n                        </Button>\n                        <Button icon onClick={closeTable}>\n                            <Icon name='sign-out' />\n                        </Button>\n                    </div>\n                </div>\n                <div className='client-layout__content'>\n                    {children}\n                </div>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { loginApi } from '../../../api/user';\nimport { useAuth } from '../../../hooks';\nimport './LoginForm.scss';\n\nexport function LoginForm() {\n    const { login } = useAuth();\n\n    const formik = useFormik({\n        initialValues: initialValues(),\n        validationSchema: Yup.object(validationSchema()),\n        onSubmit: async (formValue) => {\n            try {\n                const response = await loginApi(formValue);\n                const { access } = response;\n                login(access);\n            } catch (error) {\n                toast.error(error.message);\n            }\n        }\n    });\n\n    return (\n        <div>\n            <Form className='login-form-admin' onSubmit={formik.handleSubmit}>\n                <Form.Input type='email' name='email' placeholder='Correo electrónico' value={formik.values.email} onChange={formik.handleChange} error={formik.errors.email} />\n                <Form.Input type='password' name='password' placeholder='Contraseña' value={formik.values.password} onChange={formik.handleChange} error={formik.errors.password} />\n                <Button type='submit' content='Iniciar sesión' primary fluid />\n            </Form>\n        </div>\n    );\n}\n\nfunction initialValues() {\n    return {\n        email: '',\n        password: ''\n    }\n}\n\nfunction validationSchema() {\n    return {\n        email: Yup.string().email(true).required(true),\n        password: Yup.string().required(true)\n    }\n}","import React from 'react';\nimport { Icon, Menu } from 'semantic-ui-react';\nimport { useAuth } from '../../../hooks';\nimport './TopMenu.scss';\n\nexport function TopMenu() {\n    const { auth, logout } = useAuth();\n    \n    // Comprobamos si existe el primer nombre y el apellido\n    const renderName = () => {\n        if (auth.me?.first_name) {\n            return `${auth.me.first_name}`;\n        }\n        return auth.me?.email;\n    }\n    return (\n        <Menu fixed='top' className='top-menu-admin'>\n            <Menu.Item className='top-menu-admin__logo'>\n                <p>iCard Admin</p>\n            </Menu.Item>\n\n            <Menu.Menu position='right'>\n                <Menu.Item>Hola, {renderName()}</Menu.Item>\n                <Menu.Item onClick={logout}>\n                    <Icon name='sign-out' />\n                </Menu.Item>\n            </Menu.Menu>\n        </Menu>\n    );\n}\n","import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../../hooks';\nimport './SideMenu.scss';\n\nexport function SideMenu(props) {\n    const { children } = props;\n    const { pathname } = useLocation();\n\n    return (\n        <div className='side-menu-admin'>\n            <MenuLeft pathname={pathname} />\n            <div className='content'>{children}</div>\n        </div>\n    );\n}\n\nfunction MenuLeft(props) {\n    const { pathname } = props;\n    const { auth } = useAuth();\n\n    return (\n        <Menu fixed='left' borderless className='side' vertical>\n            <Menu.Item as={Link} to={'/admin'} active={pathname === '/admin'}>\n                <Icon name='home' /> Pedidos\n            </Menu.Item>\n\n            <Menu.Item as={Link} to={'/admin/tables'} active={pathname === '/admin/tables'}>\n                <Icon name='table' /> Mesas\n            </Menu.Item>\n\n            <Menu.Item as={Link} to={'/admin/payments-history'} active={pathname === '/admin/payments-history'}>\n                <Icon name='history' /> Historial de pagos\n            </Menu.Item>\n\n            <Menu.Item as={Link} to={'/admin/categories'} active={pathname === '/admin/categories'}>\n                <Icon name='folder' /> Categorías\n            </Menu.Item>\n\n            <Menu.Item as={Link} to={'/admin/products'} active={pathname === '/admin/products'}>\n                <Icon name='cart' /> Productos\n            </Menu.Item>\n\n            {auth.me?.is_staff && (\n                <Menu.Item as={Link} to={'/admin/users'} active={pathname === '/admin/users'}>\n                    <Icon name='users' /> Usuarios\n                </Menu.Item>\n            )}\n        </Menu>\n    );\n}","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport './HeaderPage.scss';\n\nexport function HeaderPage(props) {\n    const { title, btnTitle, btnClick, btnTitleTwo, btnClickTwo } = props;\n\n    return (\n        <div className='header-page-admin'>\n            <h2>{title}</h2>\n\n            <div>\n                {btnTitle && (\n                    <Button positive onClick={btnClick}>\n                        {btnTitle}\n                    </Button>\n                )}\n\n                {btnTitleTwo && (\n                    <Button negative onClick={btnClickTwo}>\n                        {btnTitleTwo}\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport './TableUserAdmin.scss';\n\nexport function TableUserAdmin(props) {\n    const { users, updateUser, onDeleteUser } = props;\n\n    return (\n        <Table className='table-users-admin'>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Usuario</Table.HeaderCell>\n                    <Table.HeaderCell>Correo</Table.HeaderCell>\n                    <Table.HeaderCell>Nombres</Table.HeaderCell>\n                    <Table.HeaderCell>Apellidos</Table.HeaderCell>\n                    <Table.HeaderCell>Activo</Table.HeaderCell>\n                    <Table.HeaderCell>Staff</Table.HeaderCell>\n                    <Table.HeaderCell>Acciones</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {map(users, (user, index) => (\n                    <Table.Row key={index}>\n                        <Table.Cell>{user.username}</Table.Cell>\n                        <Table.Cell>{user.email}</Table.Cell>\n                        <Table.Cell>{user.first_name}</Table.Cell>\n                        <Table.Cell>{user.last_name}</Table.Cell>\n                        <Table.Cell>\n                            {user.is_active ? <Icon name='check' color='green' /> : <Icon name='remove' color='red' />}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {user.is_staff ? <Icon name='check' color='green' /> : <Icon name='remove' color='red' />}\n                        </Table.Cell>\n                        <Actions user={user} updateUser={updateUser} onDeleteUser={onDeleteUser} />\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n}\n\nfunction Actions(props) {\n    const { user, updateUser, onDeleteUser } = props;\n\n    return (\n        <Table.Cell textAlign='right'>\n            <Button color='yellow' icon onClick={() => updateUser(user)}>\n                <Icon name='edit' />\n            </Button>\n            <Button icon negative onClick={() => onDeleteUser(user)}>\n                <Icon name='trash' />\n            </Button>\n        </Table.Cell>\n    );\n}","import React from \"react\";\nimport { Form, Button, Checkbox } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useUser } from \"../../../../hooks\";\nimport \"./AddEditUserForm.scss\";\n\nexport function AddEditUserForm(props) {\n    const { onClose, onRefetch, user } = props;\n    const { addUser, updateUser } = useUser();\n\n    const formik = useFormik({\n        initialValues: initialValues(user),\n        validationSchema: Yup.object(user ? updateSchema() : validationSchema()),\n        validateOnChange: false,\n        onSubmit: async (formValue) => {\n            try {\n                if (user) {\n                    await updateUser(user.id, formValue);\n                } else {\n                    await addUser(formValue);\n                }\n                onRefetch();\n                onClose();\n            } catch (error) {\n                console.log(error);\n            }\n        },\n    });\n\n    return (\n        <Form className=\"add-edit-user-form\" onSubmit={formik.handleSubmit}>\n        <Form.Input\n            name=\"username\"\n            type=\"text\"\n            iconPosition=\"left\"\n            icon=\"user\"\n            placeholder=\"Nombre de usuario\"\n            value={formik.values.username}\n            onChange={formik.handleChange}\n            error={formik.errors.username}\n        />\n        <Form.Input\n            name=\"email\"\n            type=\"email\"\n            iconPosition='left'\n            icon='at'\n            placeholder=\"Correo electrónico\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.errors.email}\n        />\n        <Form.Input\n            name=\"first_name\"\n            type=\"text\"\n            iconPosition='left'\n            icon='address book'\n            placeholder=\"Nombre\"\n            value={formik.values.first_name}\n            onChange={formik.handleChange}\n            error={formik.errors.first_name}\n        />\n        <Form.Input\n            name=\"last_name\"\n            type=\"text\"\n            iconPosition='left'\n            icon='address book outline'\n            placeholder=\"Apellidos\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            error={formik.errors.last_name}\n        />\n        <Form.Input\n            name=\"password\"\n            type=\"password\"\n            iconPosition=\"left\"\n            icon=\"lock\"\n            placeholder=\"Contraseña\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.errors.password}\n        />\n\n        <div className=\"add-edit-user-form__active\">\n            <Checkbox\n                toggle\n                label=\"Usuario activo\"\n                checked={formik.values.is_active}\n                onChange={(_, data) => formik.setFieldValue(\"is_active\", data.checked)}\n            />\n        </div>\n\n        <div className=\"add-edit-user-form__staff\">\n            <Checkbox\n                toggle\n                checked={formik.values.is_staff}\n                onChange={(_, data) =>\n                    formik.setFieldValue(\"is_staff\", data.checked)\n                }\n                label=\"Usuario administrador\"\n            />\n        </div>\n        <Button primary fluid type=\"submit\" content={user ? \"Actualizar usuario\" : \"Crear usuario\"} />\n        </Form>\n    );\n}\n\nfunction initialValues(data) {\n    return {\n        username: data?.username || \"\",\n        email: data?.email || \"\",\n        first_name: data?.first_name || \"\",\n        last_name: data?.last_name || \"\",\n        password: \"\",\n        is_active: data?.is_active || false,\n        is_staff: data?.is_staff || false\n    };\n}\n\nfunction validationSchema() {\n    return {\n        username: Yup.string().required(true),\n        email: Yup.string().email(true).required(true),\n        first_name: Yup.string(),\n        last_name: Yup.string(),\n        password: Yup.string().required(true),\n        is_active: Yup.bool(),\n        is_staff: Yup.bool()\n    };\n}\n\nfunction updateSchema() {\n    return {\n        username: Yup.string().required(true),\n        email: Yup.string().email(true).required(true),\n        first_name: Yup.string(),\n        last_name: Yup.string(),\n        password: Yup.string(),\n        is_active: Yup.bool(),\n        is_staff: Yup.bool()\n    };\n}","import React from 'react';\nimport { Table, Image, Button, Icon } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport './TableCategoryAdmin.scss';\n\nexport function TableCategoryAdmin(props) {\n    const { categories, updateCategory, deleteCategory } = props;\n\n    return (\n        <Table className='table-category-admin'>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Imagen</Table.HeaderCell>\n                    <Table.HeaderCell>Categoría</Table.HeaderCell>\n                    <Table.HeaderCell>Acciones</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {map(categories, (category, index) => (\n                    <Table.Row key={index}>\n                        <Table.Cell width={3}>\n                            <Image src={category.image} size='tiny' rounded />\n                        </Table.Cell>\n                        <Table.Cell width={6}>\n                            {category.title}\n                        </Table.Cell>\n                        <Actions\n                            category={category}\n                            updateCategory={updateCategory}\n                            deleteCategory={deleteCategory}\n                        />\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n}\n\nfunction Actions(props) {\n    const { category, updateCategory, deleteCategory } = props;\n\n    return (\n        <Table.Cell textAlign='right' width={3}>\n            <Button color='yellow' icon onClick={() => updateCategory(category)}>\n                <Icon name='edit' />\n            </Button>\n            <Button icon negative onClick={() => deleteCategory(category)}>\n                <Icon name='trash' />\n            </Button>\n        </Table.Cell>\n    );\n}","import React, { useState, useCallback } from 'react';\nimport { Form, Image, Button } from 'semantic-ui-react';\nimport { useDropzone } from 'react-dropzone';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useCategory } from '../../../../hooks';\nimport './AddEditCategoryForm.scss';\n\nexport function AddEditCategoryForm(props) {\n    const { onClose, onRefetch, category } = props;\n    const [previewImage, setPreviewImage] = useState(category?.image || null);\n    const { addCategory, updateCategory } = useCategory();\n\n    const formik = useFormik({\n        initialValues: initialValues(category),\n        validationSchema: Yup.object(category ? updateSchema() : newSchema()),\n        validateOnChange: false,\n        onSubmit: async (formValue) => {\n            try {\n                if (category) {\n                    await updateCategory(category.id, formValue);\n                } else {\n                    await addCategory(formValue);\n                }\n                onRefetch();\n                onClose();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    });\n\n    const onDrop = useCallback(async (acceptedFiles) => {\n        const file = acceptedFiles[0];\n        await formik.setFieldValue('image', file);\n        setPreviewImage(URL.createObjectURL(file));\n    }, []);\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: 'image/jpeg, image/png',\n        noKeyboard: true,\n        multiple: false,\n        onDrop\n    });\n\n    return (\n        <Form className='add-edit-category-form' onSubmit={formik.handleSubmit}>\n            <Form.Input\n                name='title'\n                type='text'\n                iconPosition='left'\n                icon='tag'\n                placeholder='Nombre de la categoría'\n                value={formik.values.title}\n                onChange={formik.handleChange}\n                error={formik.errors.title}\n            />\n\n            <Button fluid type='button' color={formik.errors.image && 'red'} {...getRootProps()}>\n                {previewImage ? 'Cambiar imagen' : 'Subir imagen'}\n            </Button>\n            <input {...getInputProps()} />\n            <Image src={previewImage} size='small' centered rounded />\n\n            <Button primary fluid type='submit' content={category ? 'Actualizar categoría' : 'Crear categoría'} />\n        </Form>\n    );\n}\n\n// Validation\nfunction initialValues(data) {\n    return {\n        title: data?.title || '',\n        image: ''\n    };\n}\n\nfunction newSchema() {\n    return {\n        title: Yup.string().required(true),\n        image: Yup.string().required(true)\n    };\n}\n\nfunction updateSchema() {\n    return {\n        title: Yup.string().required(true),\n        image: Yup.string()\n    };\n}","import React from 'react';\nimport { Table, Image, Button, Icon } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport './TableProductAdmin.scss';\n\nexport function TableProductAdmin(props) {\n    const { products, updateProduct, deleteProduct } = props;\n\n    return (\n        <Table className='table-product-admin'>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Imagen</Table.HeaderCell>\n                    <Table.HeaderCell>Nombre</Table.HeaderCell>\n                    <Table.HeaderCell>Categoría</Table.HeaderCell>\n                    <Table.HeaderCell>Activo</Table.HeaderCell>\n                    <Table.HeaderCell>Precio</Table.HeaderCell>\n                    <Table.HeaderCell>Acciones</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {map(products, (product, index) => (\n                    <Table.Row key={index}>\n                        <Table.Cell>\n                            <Image src={product.image} size='tiny' rounded />\n                        </Table.Cell>\n                        <Table.Cell>\n                            {product.title}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {product.category_data?.title || 'Sin categoría'}\n                        </Table.Cell>\n                        <Table.Cell className='status'>\n                            {product.active ? <Icon name='check' color='green' /> : <Icon name='remove' color='red' />}\n                        </Table.Cell>\n                        <Table.Cell>\n                            Bs. {product.price}\n                        </Table.Cell>\n\n                        <Actions\n                            product={product}\n                            updateProduct={updateProduct}\n                            deleteProduct={deleteProduct}\n                        />\n\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    );\n}\n\nfunction Actions(props) {\n    const { product, updateProduct, deleteProduct } = props;\n\n    return (\n        <Table.Cell textAlign='right'>\n            <Button color='yellow' icon onClick={() => updateProduct(product)}>\n                <Icon name='edit' />\n            </Button>\n            <Button icon negative onClick={() => deleteProduct(product)}>\n                <Icon name='trash' />\n            </Button>\n        </Table.Cell>\n    );\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { Form, Image, Button, Dropdown, Checkbox } from 'semantic-ui-react';\nimport { useDropzone } from 'react-dropzone';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { map } from 'lodash';\nimport { useCategory, useProduct } from '../../../../hooks';\nimport './AddEditProductForm.scss';\n\nexport function AddEditProductForm(props) {\n    const { onClose, onRefetch, product } = props;\n    const [categoriesFormat, setCategoriesFormat] = useState([]);\n    const [previewImage, setPreviewImage] = useState(product ? product?.image : null);\n    const { categories, getCategories } = useCategory();\n    const { addProduct, updateProduct } = useProduct();\n\n    // console.log(product);\n\n    useEffect(() => getCategories(), []);\n    useEffect(() => {\n        setCategoriesFormat(formatDropdownData(categories));\n    }, [categories]);\n\n    const formik = useFormik({\n        initialValues: initialValues(product),\n        validationSchema: Yup.object(product ? updateSchema() : newSchema()),\n        validateOnChange: false,\n        onSubmit: async (formValue) => {\n            if (product) {\n                await updateProduct(product.id, formValue);\n            } else {\n                await addProduct(formValue);\n            }\n            onRefetch();\n            onClose();\n        }\n    });\n\n    const onDrop = useCallback(async (acceptedFiles) => {\n        const file = acceptedFiles[0];\n        await formik.setFieldValue('image', file);\n        setPreviewImage(URL.createObjectURL(file));\n    }, []);\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: 'image/jpeg, image/png',\n        noKeyboard: true,\n        multiple: false,\n        onDrop\n    });\n\n    return (\n        <Form className='add-edit-product-form' onSubmit={formik.handleSubmit}>\n            <Form.Input\n                name='title'\n                type='text'\n                iconPosition='left'\n                icon='box'\n                placeholder='Nombre del producto'\n                value={formik.values.title}\n                onChange={formik.handleChange}\n                error={formik.errors.title}\n            />\n\n            <Dropdown\n                placeholder='Categoría'\n                fluid\n                selection\n                search\n                options={categoriesFormat}\n                value={formik.values.category}\n                error={formik.errors.category}\n                onChange={(_, data) => formik.setFieldValue('category', data.value)}\n            />\n            \n            <Form.Input\n                type='number'\n                name='price'\n                iconPosition='left'\n                icon='dollar'\n                placeholder='Precio'\n                value={formik.values.price}\n                onChange={formik.handleChange}\n                error={formik.errors.price}\n            />\n\n            <Button fluid type='button' color={formik.errors.image && 'red'} {...getRootProps()}>\n                {previewImage ? 'Cambiar imagen' : 'Subir imagen'}\n            </Button>\n            <input {...getInputProps()} />\n            <Image src={previewImage} size='small' centered rounded />\n\n            <div className=\"add-edit-product-form__active\">\n                <Checkbox\n                    toggle\n                    label=\"Producto activo\"\n                    checked={formik.values.active}\n                    onChange={(_, data) => formik.setFieldValue('active', data.checked)}\n                />\n            </div>\n\n            <Button\n                primary\n                fluid\n                type='submit'\n                content={product ? 'Actualizar producto' : 'Crear producto'}\n            />\n        </Form>\n    );\n}\n\nfunction formatDropdownData(data) {\n    return map(data, (item) => ({\n        key: item.id,\n        text: item.title,\n        value: item.id\n    }));\n}\n\n// Validación\nfunction initialValues(data) {\n    return {\n        title: data?.title || '',\n        category: data?.category || '',\n        price: data?.price || '',\n        image: '',\n        active: data?.active || false\n    };\n}\n\nfunction newSchema() {\n    return {\n        title: Yup.string().required(true),\n        category: Yup.number().required(true),\n        price: Yup.number().required(true),\n        image: Yup.string().required(true),\n        active: Yup.boolean()\n    };\n}\n\nfunction updateSchema() {\n    return {\n        title: Yup.string().required(true),\n        category: Yup.number().required(true),\n        price: Yup.number().required(true),\n        image: Yup.string(),\n        active: Yup.boolean().required(true)\n    };\n}","import React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport './ModalBasic.scss';\n\nexport function ModalBasic(props) {\n    const { show, size, title, children, onClose } = props;\n    return (\n        <Modal closeIcon className='modal-basic' open={show} onClose={onClose} size={size}>\n            {title && <Modal.Header>{title}</Modal.Header>}\n            <Modal.Content>{children}</Modal.Content>\n        </Modal>\n    );\n}\n\nModalBasic.defaultProps = {\n    size: 'tiny'\n}","import React from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport './ModalConfirm.scss';\n\nexport function ModalConfirm(props) {\n    const { title, show, onClose, onCloseText, onConfirm, onConfirmText } = props;\n\n    return (\n        <Modal closeIcon className='modal-confirm' open={show} onClose={onClose} size='mini'>\n            {title && <Modal.Header>{title}</Modal.Header>}\n\n            <Modal.Actions>\n                <Button negative onClick={onClose}>\n                    {onCloseText || 'Cancelar'}\n                </Button>\n\n                <Button positive onClick={onConfirm}>\n                    {onConfirmText || 'Aceptar'}\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    );\n}\n","import React, {useState } from 'react';\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport QRCode from 'qrcode.react';\nimport { ModalBasic } from '../../../Common';\nimport './TableTablesAdmin.scss';\n\nexport function TableTablesAdmin(props) {\n    const { tables, updateTable, deleteTable } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [contentModal, setContentModal] = useState(null);\n\n    const openCloseModal = () => setShowModal(!showModal);\n\n    const showQr = (table) => {\n        const tableQr = `${window.location.origin}/client/${table.number}`;\n\n        setContentModal(\n            <div className='qr-code'>\n                <QRCode value={tableQr} size={200} />\n            </div>\n        );\n        openCloseModal();\n    }\n\n    return (\n        <>\n            <Table className='table-tables-admin'>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Mesa</Table.HeaderCell>\n                        <Table.HeaderCell></Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {map(tables, (table, index) => (\n                        <Table.Row key={table.id}>\n                            <Table.Cell>Mesa: {table.number}</Table.Cell>\n                            \n                            <Actions\n                                table={table}\n                                updateTable={updateTable}\n                                deleteTable={deleteTable}\n                                showQr={showQr}\n                            />\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n\n            <ModalBasic\n                title='Código QR'\n                show={showModal}\n                onClose={openCloseModal}\n                size='mini'\n                children={contentModal}\n            />\n        </>\n    );\n}\n\nfunction Actions(props) {\n    const { table, updateTable, deleteTable, showQr } = props;\n\n    return (\n        <Table.Cell textAlign='right'>\n            <Button color='blue' icon onClick={() => showQr(table)}>\n                <Icon name='qrcode' />\n            </Button>\n            \n            <Button color='yellow' icon onClick={() => updateTable(table)}>\n                <Icon name='edit' />\n            </Button>\n\n            <Button icon negative onClick={() => deleteTable(table)}>\n                <Icon name='trash' />\n            </Button>\n        </Table.Cell>\n    );\n}","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useTable } from '../../../../hooks';\nimport './AddEditTableForm.scss';\n\nexport function AddEditTableForm(props) {\n    const { onClose, onRefetch, table } = props;\n    const { addTable, updateTable } = useTable();\n\n    // console.log(table);\n\n    const formik = useFormik({\n        initialValues: initialValues(table),\n        validationSchema: Yup.object(validationSchema()),\n        validateOnChange: false,\n        onSubmit: async (formValue) => {\n            if (table) await updateTable(table.id, formValue);\n            else await addTable(formValue);\n\n            onRefetch();\n            onClose();\n        }\n    });\n\n    return (\n        <Form className='add-edit-table-form' onSubmit={formik.handleSubmit}>\n            <Form.Input\n                name='number'\n                type='number'\n                placeholder='Número de la mesa'\n                value={formik.values.number}\n                onChange={formik.handleChange}\n                error={formik.errors.number}\n            />\n\n            <Button\n                primary\n                fluid\n                type='submit'\n                content={table ? 'Actualizar mesa' : 'Crear mesa'}\n            />\n\n        </Form>\n    );\n}\n\nfunction initialValues(data) {\n    return {\n        number: data?.number || ''\n    };\n}\n\nfunction validationSchema() {\n    return {\n        number: Yup.number().required(true)\n    };\n}","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTable(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    style: {\n      stroke: \"rgb(0, 0, 0)\"\n    },\n    x: 142.478,\n    y: 149.871,\n    width: 281.674,\n    height: 281.674,\n    rx: 10,\n    ry: 10,\n    transform: \"matrix(0.707107, 0.707107, -0.707107, 0.707107, 261.122894, -149.999893)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"rgb(0, 0, 0)\"\n    },\n    d: \"M -515.12 -538.466 H -421.356 V -409.702 H -515.12 A 35 35 0 0 1 -550.12 -444.702 V -503.466 A 35 35 0 0 1 -515.12 -538.466 Z\",\n    transform: \"matrix(0.707106, 0.707107, -0.707107, 0.707106, 108.768379, 779.224731)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"rgb(0, 0, 0)\"\n    },\n    transform: \"matrix(0.707106, 0.707108, -0.707108, 0.707106, 419.710693, 1090.169189)\",\n    d: \"M -550.12 -538.467 H -456.356 A 35 35 0 0 1 -421.356 -503.467 V -444.703 A 35 35 0 0 1 -456.356 -409.703 H -550.12 V -538.467 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"rgb(0, 0, 0)\"\n    },\n    transform: \"matrix(0.707107, -0.707106, 0.707106, 0.707107, 1090.167847, 92.288155)\",\n    d: \"M -550.12 -538.466 H -456.356 A 35 35 0 0 1 -421.356 -503.466 V -444.702 A 35 35 0 0 1 -456.356 -409.702 H -550.12 V -538.466 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"rgb(0, 0, 0)\"\n    },\n    transform: \"matrix(0.707106, 0.707107, -0.707107, 0.707106, 108.768379, 1090.167969)\",\n    d: \"M -550.12 -538.466 H -421.356 V -444.702 A 35 35 0 0 1 -456.356 -409.702 H -515.12 A 35 35 0 0 1 -550.12 -444.702 V -538.466 Z\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTable);\nexport default __webpack_public_path__ + \"static/media/table.76c6eac1.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport { size } from 'lodash';\nimport { getOrdersByTableApi } from '../../../../api/order';\nimport { ORDER_STATUS } from '../../../../utils/constants';\nimport { Label } from 'semantic-ui-react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ImgTable } from '../../../../assets/table.svg';\nimport { usePayment } from '../../../../hooks';\nimport './TableAdmin.scss';\n\nexport function TableAdmin(props) {\n    const { table, reload } = props;\n    const [orders, setOrders] = useState([]);\n    const [tableBusy, setTableBusy] = useState(false);\n    const [pendingPayment, setPendingPayment] = useState(false);\n    const { getPaymentByTable } = usePayment();\n\n    // console.log(orders);\n\n    useEffect(() => {\n        (async () => {\n            const response = await getOrdersByTableApi(\n                table.id,\n                ORDER_STATUS.PENDING\n            );\n            setOrders(response);\n        })();\n    }, [reload]);\n\n    useEffect(() => {\n        (async () => {\n            const response = await getOrdersByTableApi(\n                table.id,\n                ORDER_STATUS.DELIVERED\n            );\n            if (size(response) > 0) setTableBusy(response);\n            else setTableBusy(false);\n        })();\n    }, [reload]);\n\n    useEffect(() => {\n        (async () => {\n            const response = await getPaymentByTable(table.id);\n            if (size(response) > 0) setPendingPayment(response);\n            else setPendingPayment(false);\n            // console.log('Table ID --->', table.id);\n            // console.log(response);\n        })();\n    }, [reload]);\n\n    return (\n        <Link className='table-admin' to={`/admin/table/${table.id}`}>\n            {size(orders) > 0 ? (\n                <Label circular color='orange'>{size(orders)}</Label>\n            ) : null}\n\n            {pendingPayment && (\n                <Label circular color='orange'>\n                    Cuenta\n                </Label>\n            )}\n\n            <ImgTable\n                className={classNames({\n                    pending: size(orders) > 0,\n                    busy: tableBusy,\n                    'pending-payment': pendingPayment\n                })}\n            />\n            <p>Mesa {table.number}</p>\n        </Link>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Checkbox } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { TableAdmin } from '../TableAdmin';\nimport './TablesListAdmin.scss';\n\nexport function TablesListAdmin(props) {\n    const { tables } = props;\n    const [reload, setReload] = useState(false);\n    const [autoReload, setAutoReload] = useState(false);\n\n    const onReload = () => setReload((prev) => !prev);\n\n    useEffect(() => {\n        if (autoReload) {\n            const autoReloadAction = () => {\n                onReload();\n                setTimeout(() => {\n                    autoReloadAction();\n                }, 5000);\n            }\n            autoReloadAction();\n        }\n    } , [autoReload]);\n\n    const onCheckAutoReload = (check) => {\n        if (check) {\n            setAutoReload(true);\n        } else {\n            window.location.reload();\n        }\n    }\n\n    return (\n        <div className='tables-list-admin'>\n            <Button primary icon className='tables-list-admin__reload' onClick={onReload}>\n                <Icon name='refresh' />\n            </Button>\n\n            <div className='tables-list-admin__reload-toggle'>\n                <Checkbox toggle checked={autoReload} label='Reload automático' onChange={(_, data) => onCheckAutoReload(data.checked)} />\n            </div>\n\n            {map(tables, (table) => (\n                <TableAdmin key={table.number} table={table} reload={reload} />\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport { Button, Image } from 'semantic-ui-react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { useOrder } from '../../../../hooks';\nimport { ORDER_STATUS } from '../../../../utils/constants';\nimport './OrderItemAdmin.scss';\n\nexport function OrderItemAdmin(props) {\n    const { order, onReloadOrders } = props;\n    // console.log(order);\n    const { title, image } = order.product_data;\n    const { checkDeliveredOrder } = useOrder();\n\n    const onCheckDeliveredOrder = async () => {\n        try {\n            await checkDeliveredOrder(order.id);\n            onReloadOrders();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div\n            className={classNames('order-item-admin', {\n                [order.status.toLowerCase()] : true\n            })}\n        >\n            <div className='order-item-admin__time'>\n                <span>{moment(order.created_at).format('HH:mm')}</span> {' - '}\n                <span>{moment(order.created_at).startOf('seconds').fromNow()}</span>\n            </div>\n\n            <div className='order-item-admin__product'>\n                <Image src={image} size='tiny' rounded />\n                <p>{title}</p>\n            </div>\n            {order.status === ORDER_STATUS.PENDING && (\n                <Button primary onClick={onCheckDeliveredOrder}>\n                    Marcar como entregado\n                </Button>\n            )}\n            {order.note && (\n                <div className='order-item-admin__note'>\n                    <p>Nota: {order.note}</p>\n                </div>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { map } from 'lodash';\nimport { OrderItemAdmin } from '../OrderItemAdmin';\nimport './ListOrderAdmin.scss';\n\nexport function ListOrderAdmin(props) {\n    const { orders, onReloadOrders } = props;\n\n    return (\n        <div className='list-orders-admin'>\n            {map(orders, (order) => (\n                <OrderItemAdmin key={order.id} order={order} onReloadOrders={onReloadOrders} />\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport { usePayment, useOrder } from '../../../../hooks';\nimport './PaymentDetail.scss';\n\nexport function PaymentDetail(props) {\n    const { payment, orders, openCloseModal, onReloadOrders } = props;\n    const { closePayment } = usePayment();\n    const { closeOrder } = useOrder();\n    \n    // console.log(payment);\n\n    const getIconPayment = (key) => {\n        if (key === 'CARD') return <Icon name='credit card outline' />;\n        if (key === 'CASH') return <Icon name='money bill alternate outline' />;\n        return null;\n    }\n\n    const onCloseTable = async () => {\n        const result = window.confirm('Are you sure to close this table?');\n        if (result) {\n            await closePayment(payment.id);\n\n            for await (const order of orders) {\n                await closeOrder(order.id);\n                // console.log(order);\n            }\n            onReloadOrders();\n            openCloseModal();\n        }\n    }\n\n    return (\n        <div className='payment-detail'>\n            <Table striped>\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>Mesa:</Table.Cell>\n                        <Table.Cell>{payment.table_data.number}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Total:</Table.Cell>\n                        <Table.Cell>Bs. <strong>{payment.amount}</strong></Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Pagado:</Table.Cell>\n                        <Table.Cell>\n                            {getIconPayment(payment.payment_type)}\n                        </Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n            <Button color='green' fluid onClick={onCloseTable}>\n                Marcar como pagado y cerrar mesa\n            </Button>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Form, Image, Button, Dropdown } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useProduct, useOrder } from '../../../../hooks';\nimport './AddOrderForm.scss';\n\nexport function AddOrderForm(props) {\n    const { idTable, openCloseModal, onReloadOrders } = props;\n    const [productsFormat, setProductsFormat] = useState([]);\n    const [productsData, setProductsData] = useState([]);\n    const { products, getProducts, getProductById } = useProduct();\n    const { addOrderToTable } = useOrder();\n    // console.log(products);\n    // console.log(productsFormat);\n    // console.log(productsData);\n    useEffect(() => getProducts(), []);\n    useEffect(() => setProductsFormat(formatDropdownData(products)), [products]);\n\n    const formik = useFormik({\n        initialValues: initialValues(),\n        validationSchema: Yup.object(validationSchema()),\n        onSubmit: async (formValue) => {\n            // console.log('Creando pedidos');\n            // console.log(formValue);\n            for await (const idProduct of formValue.products) {\n                await addOrderToTable(idTable, idProduct);\n                // console.log(idProduct);\n            }\n            onReloadOrders();\n            openCloseModal();\n        }\n    });\n\n    useEffect(() => addProductList(), [formik.values]);\n\n    const addProductList = async () => {\n        try {\n            const productsId = formik.values.products;\n            const arrayTemp = [];\n            for await (const idProduct of productsId) {\n                const response = await getProductById(idProduct);\n                arrayTemp.push(response);\n            }\n            setProductsData(arrayTemp);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const removeProductList = (index) => {\n        const idProducts = [...formik.values.products];\n        idProducts.splice(index, 1);\n        formik.setFieldValue('products', idProducts);\n    }\n\n    return (\n        <Form className='add-order-form' onSubmit={formik.handleSubmit}>\n            <Dropdown\n                placeholder='Productos'\n                fluid\n                selection\n                search\n                options={productsFormat}\n                value={null}\n                onChange={(_, data) => formik.setFieldValue('products', [...formik.values.products, data.value])}\n            />\n\n            <div className='add-order-form__list'>\n                {map(productsData, (product, index) => (\n                    <div className='add-order-form__list-product' key={index}>\n                        <div>\n                            <Image src={product.image} avatar size='tiny' />\n                            <span>{product.title}</span>\n                        </div>\n                        <div>\n                            <span>{product.price}</span>\n                        </div>\n                        <Button type='button' content='Eliminar' basic color='red' onClick={() => removeProductList(index)} />\n                    </div>\n                ))}\n            </div>\n\n            <Button type='submit' content='Añadir pedido' primary fluid />\n        </Form>\n    );\n}\n\nfunction formatDropdownData(data) {\n    return map(data, (item) => ({\n        key: item.id,\n        text: item.title,\n        value: item.id\n    }));\n}\n\nfunction initialValues() {\n    return {\n        products: []\n    };\n}\n\nfunction validationSchema() {\n    return {\n        products: Yup.array().required(true)\n    };\n}","import React, { useState } from 'react';\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport moment from 'moment';\nimport { ModalBasic } from '../../../Common';\nimport { PaymentProductList } from \"../../../Admin\";\nimport './TablePayments.scss';\n\nexport function TablePayments(props) {\n    const { payments } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [titleModal, setTitleModal] = useState(null);\n    const [contentModal, setContentModal] = useState(null);\n    // console.log(payments);\n\n    const getIconPayment = (key) => {\n        if (key === 'CARD') return <Icon name='credit card outline' />;\n        if (key === 'CASH') return <Icon name='money bill alternate outline' />;\n        return null;\n    }\n\n    const openCloseModal = () => setShowModal((prev) => !prev);\n\n    const showDetails = (payment) => {\n        // console.log(payment);\n        setTitleModal(`Pedido(s) de la mesa ${payment.table_data.number}`);\n        setContentModal(<PaymentProductList payment={payment} />);\n        openCloseModal();\n    }\n\n    return (\n        <>\n            <Table className='table-payments-admin'>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>ID</Table.HeaderCell>\n                        <Table.HeaderCell>Mesa</Table.HeaderCell>\n                        <Table.HeaderCell>Total</Table.HeaderCell>\n                        <Table.HeaderCell>Forma de pago</Table.HeaderCell>\n                        <Table.HeaderCell>Fecha</Table.HeaderCell>\n                        <Table.HeaderCell>Acciones</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {map(payments, (payment, index) => (\n                        <Table.Row key={index}>\n                            <Table.Cell>{payment.id}</Table.Cell>\n                            <Table.Cell>{payment.table_data.number}</Table.Cell>\n                            <Table.Cell textAlign='right'>\n                                Bs. <strong>{payment.amount}</strong>\n                            </Table.Cell>\n                            <Table.Cell textAlign='center'>\n                                {getIconPayment(payment.payment_type)}\n                            </Table.Cell>\n                            <Table.Cell>\n                                {moment(payment.date).format('DD/MM/YYYY - HH:MM')}\n                            </Table.Cell>\n                            <Table.Cell textAlign='right'>\n                                <Button icon onClick={() => showDetails(payment)}>\n                                    <Icon name='eye' />\n                                </Button>\n                            </Table.Cell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n\n            <ModalBasic\n                show={showModal}\n                onClose={openCloseModal}\n                title={titleModal}\n                children={contentModal}\n            />\n        </>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { map } from \"lodash\";\nimport { useOrder } from \"../../../../hooks\";\nimport \"./PaymentProductList.scss\";\n\nexport function PaymentProductList(props) {\n    const { payment } = props;\n    const [orders, setOrders] = useState([]);\n    const { getOrdersByPayment } = useOrder();\n\n    useEffect(() => {\n        (async () => {\n        const response = await getOrdersByPayment(payment.id);\n        setOrders(response);\n        })();\n    }, []);\n\n    return (\n        <div className=\"payment-product-list\">\n            {map(orders, (order) => (\n            <div className=\"payment-product-list__product\" key={order.id}>\n                <div>\n                    <Image src={order.product_data.image} avatar size=\"tiny\" />\n                    <span>{order.product_data.title}</span>\n                </div>\n                <span>Bs. {order.product_data.price} €</span>\n            </div>\n            ))}\n        </div>\n    );\n}","import React from 'react';\nimport { LoginForm } from '../../../components/Admin';\nimport './LoginAdmin.scss';\n\nexport function LoginAdmin() {\n  return (\n    <div className='login-admin'>\n        <div className='login-admin__content'>\n          <h1>Entrar al panel</h1>\n          <LoginForm />\n        </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { LoginAdmin } from '../../pages/Admin';\nimport { TopMenu, SideMenu } from '../../components/Admin';\nimport { useAuth } from '../../hooks';\nimport './AdminLayout.scss';\n\nexport function AdminLayout(props) {\n    const { children } = props;\n    const { auth } = useAuth();\n\n    if (!auth) return <LoginAdmin />;\n\n    return (\n        <div className='admin-layout'>\n            <div className='admin-layout__menu'>\n                <TopMenu />\n            </div>\n\n            <div className='admin-layout__main-content'>\n                <SideMenu>{children}</SideMenu>\n            </div>\n        </div>\n    );\n}\n","export function BasicLayout(props) {\n    const { children } = props;\n    return children;\n}\n","import { AdminLayout } from \"../layouts\";\nimport { UsersAdmin, CategoriesAdmin, ProductsAdmin, TablesAdmin, OrdersAdmin, TableDetailsAdmin, PaymentsHistory } from \"../pages/Admin\";\n\nconst routesAdmin = [\n    {\n        path: \"/admin\",\n        layout: AdminLayout,\n        component: OrdersAdmin,\n        exact: true\n    },\n    {\n        path: \"/admin/users\",\n        layout: AdminLayout,\n        component: UsersAdmin,\n        exact: true\n    },\n    {\n        path: \"/admin/categories\",\n        layout: AdminLayout,\n        component: CategoriesAdmin,\n        exact: true\n    },\n    {\n        path: \"/admin/products\",\n        layout: AdminLayout,\n        component: ProductsAdmin,\n        exact: true\n    },\n    {\n        path: \"/admin/tables\",\n        layout: AdminLayout,\n        component: TablesAdmin,\n        exact: true\n    },\n    {\n        path: \"/admin/table/:id\",\n        layout: AdminLayout,\n        component: TableDetailsAdmin,\n        exact: true\n    },\n    {\n        path: \"/admin/payments-history\",\n        layout: AdminLayout,\n        component: PaymentsHistory,\n        exact: true\n    }\n];\n\nexport default routesAdmin;","import React, { useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderPage, TablesListAdmin } from '../../components/Admin';\nimport { useTable } from '../../hooks';\n\nexport function OrdersAdmin() {\n    const { loading, tables, getTables } = useTable();\n\n    useEffect(() => getTables(), []);\n    // console.log(tables);\n\n    return (\n        <>\n            <HeaderPage title='Restaurante' />\n\n            {loading ? (\n                <Loader active inline='centered'>\n                    Cargando mesas...\n                </Loader>\n            ) : (\n                <TablesListAdmin tables={tables} />\n            )}\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { Loader } from \"semantic-ui-react\";\nimport { HeaderPage, TableUserAdmin, AddEditUserForm } from \"../../components/Admin\";\nimport { ModalBasic } from \"../../components/Common\";\nimport { useUser } from \"../../hooks\";\n\nexport function UsersAdmin() {\n    const [showModal, setShowModal] = useState(false);\n    const [titleModal, setTitleModal] = useState(null);\n    const [contentModal, setContentModal] = useState(null);\n    const [refetch, setRefetch] = useState(false);\n    const { loading, users, getUsers, deleteUser } = useUser();\n\n    useEffect(() => getUsers(), [refetch]);\n\n    const openCloseModal = () => setShowModal((prev) => !prev);\n    const onRefetch = () => setRefetch((prev) => !prev); // Refetch para actualizar la tabla\n\n    const addUser = () => {\n        setTitleModal(\"Crear usuario\");\n        setContentModal(\n            <AddEditUserForm onClose={openCloseModal} onRefetch={onRefetch} />\n        );\n        openCloseModal();\n    };\n\n    // Función para actualizar usuario\n    const updateUser = (data) => {\n        setTitleModal(\"Actualizar usuario\");\n        setContentModal(\n            <AddEditUserForm onClose={openCloseModal} onRefetch={onRefetch} user={data} />\n        );\n        openCloseModal();\n    };\n\n    // Función para eliminar usuario\n    const onDeleteUser = async (data) => {\n        const result = window.confirm(`¿Está seguro que desea eliminar el usuario: ${data.username}?`);\n        if (result) {\n            try {\n                await deleteUser(data.id);\n                onRefetch();\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    return (\n        <>\n            <HeaderPage\n                title=\"Usuarios\"\n                btnTitle=\"Crear usuario\"\n                btnClick={addUser}\n            />\n            {loading ? (\n                <Loader active inline=\"centered\">\n                Cargando...\n                </Loader>\n            ) : (\n                <TableUserAdmin users={users} updateUser={updateUser} onDeleteUser={onDeleteUser} />\n            )}\n\n            <ModalBasic\n                show={showModal}\n                onClose={openCloseModal}\n                title={titleModal}\n                children={contentModal}\n            />\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderPage, TableCategoryAdmin, AddEditCategoryForm } from '../../components/Admin';\nimport { ModalBasic } from '../../components/Common';\nimport { useCategory } from '../../hooks';\n\nexport function CategoriesAdmin() {\n    const [showModal, setShowModal] = useState(false);\n    const [titleModal, setTitleModal] = useState(null);\n    const [contentModal, setContentModal] = useState(null);\n    const [refetch, setRefetch] = useState(false);\n    const { loading, categories, getCategories, deleteCategory } = useCategory();\n\n    useEffect(() => getCategories(), [refetch]);\n\n    const openCloseModal = () => setShowModal((prev) => !prev);\n    const onRefetch = () => setRefetch((prev) => !prev); // Refetch para actualizar la tabla\n\n    // Abrir popup para agregar categoría\n    const addCategory = () => {\n        setTitleModal('Agregar nueva categoría');\n        setContentModal(\n            <AddEditCategoryForm onClose={openCloseModal} onRefetch={onRefetch} />\n        );\n        openCloseModal();\n    }\n\n    // Update category\n    const updateCategory = (data) => {\n        setTitleModal('Editar categoría');\n        setContentModal(\n            <AddEditCategoryForm onClose={openCloseModal} onRefetch={onRefetch} category={data} />\n        );\n        openCloseModal();\n    }\n\n    // Delete category\n    const onDeleteCategory = async (data) => {\n        const result = window.confirm(`¿Estás seguro de eliminar la categoría: ${data.title}?`);\n        if (result) {\n            await deleteCategory(data.id);\n            onRefetch();\n        }\n    }\n\n    return (\n        <>\n            <HeaderPage title=\"Categorías\" btnTitle=\"Nueva categoría\" btnClick={addCategory} />\n            {loading ? (\n                <Loader active inline=\"centered\">\n                    Cargando categorías...\n                </Loader>\n            ) : (\n                <TableCategoryAdmin\n                    categories={categories}\n                    updateCategory={updateCategory}\n                    deleteCategory={onDeleteCategory}\n                />\n            )}\n\n            <ModalBasic\n                show={showModal}\n                onClose={openCloseModal}\n                title={titleModal}\n                children={contentModal}\n            />\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderPage, TableProductAdmin, AddEditProductForm } from '../../components/Admin';\nimport { ModalBasic } from '../../components/Common';\nimport { useProduct } from '../../hooks';\n\nexport function ProductsAdmin() {\n    const [showModal, setShowModal] = useState(false);\n    const [titleModal, setTitleModal] = useState(null);\n    const [contentModal, setContentModal] = useState(null);\n    const [refetch, setRefetch] = useState(false);\n    const { loading, products, getProducts, deleteProduct } = useProduct();\n\n    useEffect(() => getProducts(), [refetch]);\n\n    const openCloseModal = () => setShowModal((prev) => !prev); // función para cerrar el modal\n    const onRefetch = () => setRefetch((prev) => !prev); // función para recargar la página\n\n    // Abrir popup para agregar producto\n    const addProduct = () => {\n        setTitleModal('Agregar nuevo producto');\n        setContentModal(\n            <AddEditProductForm onClose={openCloseModal} onRefetch={onRefetch} />\n        );\n        openCloseModal();\n    }\n\n    // Para actualizar un producto\n    const updateProduct = (product) => {\n        setTitleModal('Actualizar producto');\n        setContentModal(\n            <AddEditProductForm onClose={openCloseModal} onRefetch={onRefetch} product={product} />\n        );\n        openCloseModal();\n    }\n\n    // Delete product\n    const onDeleteProduct = async (data) => {\n        const result = window.confirm(`¿Estás seguro de eliminar el producto: ${data.title}?`);\n        if (result) {\n            // console.log('Eliminado');\n            await deleteProduct(data.id);\n            onRefetch();\n        }\n    }\n\n    return (\n        <>\n            <HeaderPage title='Productos' btnTitle='Nuevo producto' btnClick={addProduct} />\n\n            {loading ? (\n                <Loader active inline='centered'>\n                    Cargando productos...\n                </Loader>\n            ) : (\n                <TableProductAdmin\n                    products={products}\n                    updateProduct={updateProduct}\n                    deleteProduct={onDeleteProduct}\n                />\n            )}\n\n            <ModalBasic\n                show={showModal}\n                onClose={openCloseModal}\n                title={titleModal}\n                children={contentModal}\n            />\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderPage, TableTablesAdmin, AddEditTableForm } from '../../components/Admin';\nimport { ModalBasic } from '../../components/Common';\nimport { useTable } from '../../hooks';\n\nexport function TablesAdmin() {\n    const [showModal, setShowModal] = useState(false);\n    const [titleModal, setTitleModal] = useState(null);\n    const [contentModal, setContentModal] = useState(null);\n    const [refetch, setRefetch] = useState(false);\n\n    const { loading, tables, getTables, deleteTable } = useTable();\n\n    useEffect(() => {\n        getTables();\n    }, [refetch]);\n\n    // console.log(tables);\n\n    const openCloseModal = () => setShowModal((prev) => !prev);\n    const onRefetch = () => setRefetch((prev) => !prev);\n\n    const addTable = () => {\n        setTitleModal('Agregar mesa');\n        setContentModal(<AddEditTableForm onClose={openCloseModal} onRefetch={onRefetch} />);\n        openCloseModal();\n    }\n\n    // Para actualizar una mesa\n    const updateTable = (data) => {\n        setTitleModal('Actualizar mesa');\n        setContentModal(\n            <AddEditTableForm\n                onClose={openCloseModal}\n                onRefetch={onRefetch}\n                table={data}\n            />\n        );\n        openCloseModal();\n    }\n\n    // Delete table\n    const onDeleteTable = async (data) => {\n        const result = window.confirm(`¿Estás seguro de eliminar la mesa: ${data.number}?`);\n        if (result) {\n            // console.log('Eliminado');\n            await deleteTable(data.id);\n            onRefetch();\n        }\n    }\n\n    return (\n        <>\n            <HeaderPage\n                title='Mesas'\n                btnTitle='Crear mesa'\n                btnClick={addTable}\n            />\n\n            {loading ? (\n                <Loader active inline=\"centered\">\n                    Cargando mesas...\n                </Loader>\n            ) : (\n                <TableTablesAdmin\n                    tables={tables}\n                    updateTable={updateTable}\n                    deleteTable={onDeleteTable}\n                />\n            )}\n\n            <ModalBasic\n                show={showModal}\n                onClose={openCloseModal}\n                title={titleModal}\n                children={contentModal}\n            />\n        </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { useParams } from 'react-router-dom';\nimport { forEach, size } from 'lodash';\nimport { HeaderPage, AddOrderForm } from '../../components/Admin';\nimport { ModalBasic } from '../../components/Common';\nimport { ListOrderAdmin, PaymentDetail } from '../../components/Admin/TableDetails';\nimport { useOrder, useTable, usePayment } from '../../hooks';\n\nexport function TableDetailsAdmin() {\n    const [reloadOrders, setReloadOrders] = useState(false);\n    const [paymentData, setPaymentData] = useState(null);\n    const { id } = useParams();\n    // console.log(params);\n    const { loading, orders, getOrdersByTable, addPaymentToOrder } = useOrder();\n    const { table, getTable } = useTable();\n    const { createPayment, getPaymentByTable } = usePayment();\n\n    const [showModal, setShowModal] = useState(false);\n\n    // console.log(table);\n\n    useEffect(() => {\n        getOrdersByTable(id, '', 'ordering=-status,created_at');\n    }, [id, reloadOrders]);\n\n    // console.log(orders);\n\n    useEffect(() => getTable(id), [id]);\n\n    useEffect(() => {\n        (async () => {\n            const response = await getPaymentByTable(id);\n            if (size(response) > 0) {\n                setPaymentData(response[0]);\n            } else {\n                console.log('Cuenta no pedida');\n            }\n        })();\n    }, [reloadOrders]); // Este useEffect se ejecuta cada vez que reloadOrders cambia\n\n    const onReloadOrders = () => setReloadOrders((prev) => !prev);\n    const openCloseModal = () => setShowModal((prev) => !prev);\n\n    const onCreatePayment = async () => {\n        const result = window.confirm('¿Estás seguro que quieres generar la cuenta de la mesa?');\n        if (result) {\n            let totalPayment = 0;\n            forEach(orders, (order) => {\n                totalPayment += Number(order.product_data.price);\n            });\n\n            const resultTypePayment = window.confirm(\n                'Pago con tarjeta pulsa ACEPTAR, pago con efectivo pulsa CANCELAR'\n            );\n\n            const paymentData = {\n                table: id,\n                amount: totalPayment.toFixed(2),\n                payment_type: resultTypePayment ? 'CARD' : 'CASH',\n                status_payment: 'PENDING'\n            };\n            const payment = await createPayment(paymentData);\n\n            for await (const order of orders) {\n                await addPaymentToOrder(order.id, payment.id);\n            }\n            // console.log(payment);\n            onReloadOrders();\n        }\n    }\n\n    return (\n        <>\n            <HeaderPage\n                title={`Mesa ${table?.number || ''}`}\n                btnTitle={paymentData ? 'Ver cuenta' : 'Añadir pedido'}\n                btnClick={openCloseModal}\n                btnTitleTwo={!paymentData ? 'Generar cuenta' : null}\n                btnClickTwo={onCreatePayment}\n            />\n            {loading ? (\n                <Loader active inline='centered'>\n                    Cargando...\n                </Loader>\n            ) : (\n                <ListOrderAdmin orders={orders} onReloadOrders={onReloadOrders} />\n            )}\n            <ModalBasic show={showModal} onClose={openCloseModal} title={paymentData ? 'Cuenta' : 'Generar pedido'}>\n                {paymentData ? (\n                    <PaymentDetail payment={paymentData} orders={orders} openCloseModal={openCloseModal} onReloadOrders={onReloadOrders} />\n                ) : (\n                    <AddOrderForm idTable={id} openCloseModal={openCloseModal} onReloadOrders={onReloadOrders} />\n                )}\n            </ModalBasic>\n        </>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderPage, TablePayments } from '../../components/Admin';\nimport { usePayment } from '../../hooks';\n\nexport function PaymentsHistory() {\n    const { loading, payments, getPayments } = usePayment();\n\n    useEffect(() => getPayments(), []);\n    // console.log(payments);\n\n    return (\n        <>\n            <HeaderPage title='Historial de pagos' />\n\n            {loading ? (\n                <Loader active inline='centered'>\n                    Cargando...\n                </Loader>\n            ) : (\n                <TablePayments payments={payments} />\n            )}\n        </>\n    );\n}\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport './ListCategories.scss';\n\nexport function ListCategories(props) {\n    const { categories } = props;\n    const location = useLocation();\n    const history = useHistory();\n    // console.log(location);\n\n    const goToCategory = (id) => {\n        history.push(`${location.pathname}/${id}`);\n    }\n\n    return (\n        <div className='list-categories-client'>\n            {map(categories, (category) => (\n                <div\n                    className='list-categories-client__category'\n                    key={category.id}\n                    onClick={() => goToCategory(category.id)}\n                >\n                    <Image src={category.image} alt={category.title} size='small' rounded />\n                    <span>{category.title}</span>\n                </div>\n            ))}\n        </div>\n    );\n}","const PRODUCT_CART = 'productsCart';\n\nexport function getProductsCart() {\n    const response = localStorage.getItem(PRODUCT_CART);\n    return JSON.parse(response || '[]');\n}\n\nexport function addProductCart(id) {\n    // console.log(getProductsCart());\n    const products = getProductsCart();\n    products.push(id);\n    localStorage.setItem(PRODUCT_CART, JSON.stringify(products)); // localStorage solo acepta strings\n}\n\nexport function removeProductCartApi(index) {\n    const idProducts = getProductsCart();\n    idProducts.splice(index, 1);\n    localStorage.setItem(PRODUCT_CART, JSON.stringify(idProducts));\n}\n\nexport function cleanProductCartApi() {\n    localStorage.removeItem(PRODUCT_CART);\n}","import React from 'react';\nimport { Image, Button, Icon } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { addProductCart } from '../../../api/cart';\nimport './ListProducts.scss';\n\nexport function ListProducts(props) {\n    const { products } = props;\n\n    const addCart = (product) => {\n        addProductCart(product.id);\n        toast.success(`${product.title} añadido al carrito`);\n    }\n\n    return (\n        <div className='list-products-client'>\n            {map(products, (product) => (\n                <div key={product.id} className='list-products-client__product'>\n                    <div>\n                        <Image src={product.image} rounded size='tiny' />\n                        <span>{product.title}</span>\n                    </div>\n                    <Button primary icon onClick={() => addCart(product)}>\n                        <Icon name='add' />\n                    </Button>\n                </div>\n            ))}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Image, Button, Icon } from 'semantic-ui-react';\nimport { map, forEach } from 'lodash';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useOrder, useTable } from '../../../hooks';\nimport { removeProductCartApi, cleanProductCartApi } from '../../../api/cart';\nimport './ListProductsCart.scss';\n\nexport function ListProductsCart(props) {\n    const { products, onReloadCart } = props;\n    const [total, setTotal] = useState(0);\n    const { addOrderToTable } = useOrder();\n    const { getTableByNumber } = useTable();\n    const { tableNumber } = useParams();\n    const history = useHistory();\n\n    // console.log(useParams());\n\n    useEffect(() => {\n        let totalTemp = 0;\n        forEach(products, (product) => {\n            totalTemp += Number(product.price);\n        });\n        setTotal(totalTemp.toFixed(2));\n    }, [products]);\n\n    const removeProduct = (index) => {\n        removeProductCartApi(index);\n        onReloadCart();\n    }\n\n    const createOrder = async () => {\n        const tableData = await getTableByNumber(tableNumber);\n        const idTable = tableData[0].id;\n\n        for await (const product of products) {\n            await addOrderToTable(idTable, product.id);\n        }\n\n        cleanProductCartApi();\n        history.push(`/client/${tableNumber}/orders`);\n    }\n\n    return (\n        <div className='list-products-cart'>\n            {map(products, (product, index) => (\n                <div key={index} className='list-products-cart__product'>\n                    <div>\n                        <Image src={product.image} avatar />\n                        <span>{product.title.substring(0, 15)}</span>\n                    </div>\n                    <span>Bs. {product.price}</span>\n                    <Icon name='remove' onClick={() => removeProduct(index)} />\n                </div>\n            ))}\n\n            <Button primary fluid onClick={createOrder}>\n                Realizar pedido (Bs. {total})\n            </Button>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { ORDER_STATUS } from '../../../utils/constants';\nimport './OrderHistoryItem.scss';\n\nexport function OrderHistoryItem(props) {\n    const { order } = props;\n    const { title, image } = order.product_data;\n\n    return (\n        <div className={classNames('order-history-item', {\n            [order.status.toLowerCase()]: true\n        })}>\n            <div className='order-history-item__time'>\n                <span>\n                    Pedido {moment(order.created_at).startOf('seconds').fromNow()}\n                </span>\n            </div>\n\n            <div className='order-history-item__product'>\n                <Image src={image} alt={title} size='tiny' rounded />\n                <p>{title}</p>\n            </div>\n\n            {order.status === ORDER_STATUS.PENDING ? (\n                <span>En marcha</span>\n            ) : (\n                <span>Entregado</span>\n            )}\n        </div>\n    );\n}\n","import { ClientLayout, BasicLayout } from \"../layouts\";\nimport { SelectTable, Categories, Products, Cart, OrdersHistory } from \"../pages/Client\";\n\nconst routesClient = [\n    {\n        path: \"/\",\n        layout: BasicLayout,\n        component: SelectTable,\n        exact: true\n    },\n    {\n        path: \"/client/:tableNumber\",\n        layout: ClientLayout,\n        component: Categories,\n        exact: true\n    },\n    {\n        path: \"/client/:tableNumber/cart\",\n        layout: ClientLayout,\n        component: Cart,\n        exact: true\n      },\n      {\n        path: \"/client/:tableNumber/orders\",\n        layout: ClientLayout,\n        component: OrdersHistory,\n        exact: true\n      },\n      {\n        path: \"/client/:tableNumber/:idCategory\",\n        layout: ClientLayout,\n        component: Products,\n        exact: true\n      }\n];\n\nexport default routesClient;","import React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useTable } from '../../../hooks';\nimport './SelectTable.scss';\n\nexport function SelectTable(props) {\n    const { history } = props;\n    const [tableNum, setTableNum] = useState(null);\n    const [error, setError] = useState(null);\n    const { isExistTable } = useTable();\n\n    const onSubmit = async () => {\n        setError(null);\n        if (!tableNum) {\n            setError('Debes ingresar el número de la mesa');\n        } else {\n            const exist = await isExistTable(tableNum);\n            if (exist) history.push(`/client/${tableNum}`);\n            else setError('El número de la mesa no existe');\n        }\n    }\n\n    return (\n        <div className='select-table'>\n            <div className='select-table__content'>\n                <h1>Bienvenido a Menú digital</h1>\n                <h2>Ingresa tu número de mesa</h2>\n\n                <Form onSubmit={onSubmit}>\n                    <Form.Input\n                        placeholder='Ejemplo: 135, 140, 145, 150'\n                        type='number'\n                        onChange={(_, data) => setTableNum(data.value)}\n                    />\n\n                    <Button primary fluid>\n                        Entrar\n                    </Button>\n                </Form>\n\n                <p className='select-table__content-error'>{error}</p>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport { useCategory } from '../../hooks';\nimport { ListCategories } from '../../components/Client';\n\nexport function Categories() {\n    const { loading, categories, getCategories } = useCategory();\n\n    useEffect(() => getCategories(), []);\n\n    // console.log(categories);\n    \n    return (\n        <div>\n            <h2>Categorías</h2>\n            {loading ? (\n                <Loader active inline=\"centered\">\n                    Cargando...\n                </Loader>\n            ) : (\n                <ListCategories categories={categories} />\n            )}\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Loader, Button } from 'semantic-ui-react';\nimport { size } from 'lodash';\nimport { useProduct } from '../../hooks';\nimport { getProductsCart } from '../../api/cart';\nimport { ListProductsCart } from '../../components/Client';\n\nexport function Cart() {\n    const [products, setProducts] = useState(null);\n    const [reloadCart, setReloadCart] = useState(false);\n    const { getProductById } = useProduct();\n    const { tableNumber } = useParams();\n\n    // console.log(useParams());\n    // console.log(products);\n\n    useEffect(() => {\n        (async () => {\n            const idProductsCart = await getProductsCart();\n\n            const productsArray = [];\n            for await (const idProduct of idProductsCart) {\n                const response = await getProductById(idProduct);\n                productsArray.push(response);\n            }\n            setProducts(productsArray);\n        })();\n    }, [reloadCart]);\n\n    const onReloadCart = () => setReloadCart((prev) => !prev);\n    \n    return (\n        <div>\n            <h1>Carrito</h1>\n            {!products ? (\n                <Loader active inline=\"centered\">\n                    Cargando...\n                </Loader>\n            ) : size(products) === 0 ? (\n                <div style={{ textAlign: 'center' }}>\n                    <p>Tu carrito está vacío</p>\n                    <Link to={`/client/${tableNumber}/orders`}>\n                        <Button primary>Ver pedidos</Button>\n                    </Link>\n                </div>\n            ) : (\n                <ListProductsCart products={products} onReloadCart={onReloadCart} />\n            )}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader, Button } from 'semantic-ui-react';\nimport { useParams } from 'react-router-dom';\nimport { map, size, forEach } from 'lodash';\nimport { OrderHistoryItem } from '../../components/Client';\nimport { ModalConfirm } from '../../components/Common';\nimport { useOrder, useTable, usePayment } from '../../hooks';\n\nexport function OrdersHistory() {\n    const [idTable, setIdTable] = useState(null);\n    const [showTypePayment, setShowTypePayment] = useState(false);\n    const [isRequestAccount, setIsRequestAccount] = useState(false);\n    const { loading, orders, getOrdersByTable, addPaymentToOrder } = useOrder();\n    const { getTableByNumber } = useTable();\n    const { tableNumber } = useParams();\n    const { createPayment, getPaymentByTable } = usePayment();\n\n    useEffect(() => {\n      (async () => {\n            const table = await getTableByNumber(tableNumber);\n            const idTableTemp = table[0].id;\n            setIdTable(idTableTemp);\n\n            getOrdersByTable(idTableTemp, '', 'ordering=-status,-created_at');\n      })();\n    }, []);\n\n    useEffect(() => {\n        (async () => {\n            if (idTable) {\n                const response = await getPaymentByTable(idTable);\n                // console.log(response);\n                setIsRequestAccount(response);\n            }\n        })();\n    }, [idTable]);\n    \n\n    const onCreatePayment = async (payment_type) => {\n        setShowTypePayment(false);\n\n        let amount = 0;\n        forEach(orders, (order) => {\n            amount += Number(order.product_data.price);\n        });\n\n        // console.log('Tipo de pago ---> ', payment_type);\n        // console.log('Total a pagar ---> ', amount);\n\n        const paymentData = {\n            table: idTable,\n            amount: amount.toFixed(2),\n            payment_type,\n            status_payment: 'PENDING'\n        }\n        // console.log(paymentData);\n        const payment = await createPayment(paymentData);\n        for await (const order of orders) {\n            await addPaymentToOrder(order.id, payment.id);\n        }\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            <h1>Historial de pedidos</h1>\n\n            {loading ? (\n                <Loader active inline=\"centered\">\n                    Cargando...\n                </Loader>\n            ) : (\n                <div>\n                    {size(orders) > 0 && (\n                        <Button\n                            primary\n                            fluid\n                            onClick={() => size(isRequestAccount) === 0 && setShowTypePayment(true)}\n                        >\n                            {size(isRequestAccount) > 0 ? (\n                                'La cuenta ya está pedida'\n                            ) : (\n                                'Pedir la cuenta'\n                            )}\n                        </Button>\n                    )}\n\n                    {map(orders, (order) => (\n                        <OrderHistoryItem key={order.id} order={order} />\n                    ))}\n                </div>\n            )}\n\n            <ModalConfirm\n                title='Pagar con tarjeta o efectivo'\n                show={showTypePayment}\n                onClose={() => onCreatePayment('CASH')}\n                onCloseText='Efectivo'\n                onConfirm={() => onCreatePayment('CARD')}\n                onConfirmText='Tarjeta'\n            />\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Loader } from 'semantic-ui-react';\nimport { useProduct } from '../../hooks';\nimport { ListProducts } from '../../components/Client';\n\nexport function Products() {\n    const { tableNumber, idCategory } = useParams();\n    const { loading, products, getProductsByCategory } = useProduct();\n    // console.log(useParams());\n\n    useEffect(() => getProductsByCategory(idCategory), [idCategory]);\n    \n    // console.log(products);\n\n    return (\n        <div>\n            <Link to={`/client/${tableNumber}`}>Volver atrás</Link>\n            \n            {loading ? (\n                <Loader active inline=\"centered\">\n                    Cargando...\n                </Loader>\n            ) : (\n                <ListProducts products={products} />\n            )}\n        </div>\n    );\n}\n","import routesAdmin from \"./routes.admin\";\nimport routesClient from \"./routes.client\";\nimport { Error404 } from \"../pages\";\nimport { BasicLayout } from \"../layouts\";\n\nconst routes = [\n    ...routesAdmin,\n    ...routesClient,\n    {\n        layout: BasicLayout,\n        component: Error404\n    }\n];\n\nexport default routes;","import React from 'react';\n\nexport function Error404() {\n  return (\n    <div>\n        <h2>ERROR 404</h2>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { map } from 'lodash';\nimport routes from './routes';\n\nexport function Navigation() {\n  return (\n    <Router>\n        <Switch>\n          {map(routes, (route, index) => (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              render={props => (\n                <route.layout>\n                  <route.component {...props} />\n                </route.layout>\n              )}\n            />\n          ))}\n        </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Navigation } from './routes';\nimport { AuthProvider } from './context';\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Navigation />\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover={false}\n      />\n    </AuthProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './scss/global.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}